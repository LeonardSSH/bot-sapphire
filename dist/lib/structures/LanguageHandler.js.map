{"version":3,"file":"LanguageHandler.js","sourceRoot":"","sources":["../../../src/lib/structures/LanguageHandler.ts"],"names":[],"mappings":";;;;AACA,2CAAwC;AACxC,2BAA8B;AAC9B,8DAA6C;AAC7C,8FAA8C;AAC9C,mDAA6B;AAE7B,MAAa,eAAe;IAEpB,SAAS,CAAiC;IAEjC,UAAU,CAAU;IACnB,QAAQ,CAAmD;IAE5E,YAAmB,SAAiB;QACnC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG;YACf,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,aAAa,CAAC;YAC9D,OAAO,EAAE,IAAI,CAAC,UAAU;SACxB,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,IAAI;QAChB,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE9E,iBAAO,CAAC,GAAG,CAAC,iCAAO,CAAC,CAAC;QAC3B,MAAM,iBAAO,CAAC,IAAI,CAAC;YAClB,OAAO,EAAE,IAAI,CAAC,QAAQ;YACtB,KAAK,EAAE,KAAK;YACH,WAAW,EAAE,OAAO;YACpB,aAAa,EAAE,KAAK;YACpB,aAAa,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE;YAC9C,IAAI,EAAE,KAAK;YACX,EAAE,EAAE,UAAU;YACd,OAAO,EAAE,SAAS;SAClB,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,uBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,iBAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,CAAC;IAMO,KAAK,CAAC,qBAAqB,CAAC,GAAW,EAAE,aAAuB,EAAE,EAAE,UAAU,GAAG,EAAE;QAC1F,MAAM,KAAK,GAAG,MAAM,aAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAE1C,MAAM,SAAS,GAAa,EAAE,CAAC;QAC/B,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACzB,MAAM,IAAI,GAAG,MAAM,aAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;YACvD,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;gBACvB,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACtC,IAAI,UAAU;oBAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAErC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;gBAGhH,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;aAC/B;iBAAM;gBACN,UAAU,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;aACnE;SACD;QAED,OAAO,EAAE,UAAU,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC;IAC5D,CAAC;CAED;AA5DD,0CA4DC","sourcesContent":["/* eslint-disable valid-jsdoc */\nimport { Collection } from \"discord.js\";\nimport { promises } from \"fs\";\nimport i18next, { TFunction } from \"i18next\";\nimport Backend from \"i18next-node-fs-backend\";\nimport * as path from \"path\";\n\nexport class LanguageHandler {\n\n\tpublic languages!: Collection<string, TFunction>;\n\n\tpublic readonly kDirectory!: string;\n\tprivate readonly kOptions: i18nextNodeFsBackEnd.i18nextNodeFsBackEndOptions;\n\n\tpublic constructor(directory: string) {\n\t\tthis.kDirectory = directory;\n\t\tthis.kOptions = {\n\t\t\tjsonIndent: 2,\n\t\t\tloadPath: path.join(this.kDirectory, \"{{lng}}\", \"{{ns}}.json\"),\n\t\t\taddPath: this.kDirectory\n\t\t};\n\t}\n\n\tpublic async init() {\n\t\tconst { namespaces, languages } = await this.walkLanguageDirectory(this.kDirectory);\n\n        i18next.use(Backend);\n\t\tawait i18next.init({\n\t\t\tbackend: this.kOptions,\n\t\t\tdebug: false,\n            fallbackLng: \"en-US\",\n            initImmediate: false,\n            interpolation: { escapeValue: false },\n\t\t\tload: \"all\",\n\t\t\tns: namespaces,\n\t\t\tpreload: languages\n\t\t});\n\n\t\tthis.languages = new Collection(languages.map(item => [item, i18next.getFixedT(item)]));\n\t}\n\n\t/**\n\t * @copyright 2020 TypicalBot LLC, Nicholas Sylke and the TypicalBot contributors\n\t * @license Apache-2.0\n\t */\n\tprivate async walkLanguageDirectory(dir: string, namespaces: string[] = [], folderName = \"\") {\n\t\tconst files = await promises.readdir(dir);\n\n\t\tconst languages: string[] = [];\n\t\tfor (const file of files) {\n\t\t\tconst stat = await promises.stat(path.join(dir, file));\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tconst isLanguage = file.includes(\"-\");\n\t\t\t\tif (isLanguage) languages.push(file);\n\n\t\t\t\tconst folder = await this.walkLanguageDirectory(path.join(dir, file), namespaces, isLanguage ? \"\" : `${file}/`);\n\n\t\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\t\tnamespaces = folder.namespaces;\n\t\t\t} else {\n\t\t\t\tnamespaces.push(`${folderName}${file.substr(0, file.length - 5)}`);\n\t\t\t}\n\t\t}\n\n\t\treturn { namespaces: [...new Set(namespaces)], languages };\n\t}\n\n}\n"]}