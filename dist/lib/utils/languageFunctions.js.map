{"version":3,"file":"languageFunctions.js","sourceRoot":"","sources":["../../../src/lib/utils/languageFunctions.ts"],"names":[],"mappings":";;;AAAa,QAAA,IAAI,GAAG,CAAC,MAAyB,EAAE,UAAwB,EAAE,EAAE;IAC3E,QAAQ,MAAM,CAAC,MAAM,EAAE;QACtB,KAAK,CAAC;YACL,OAAO,EAAE,CAAC;QACX,KAAK,CAAC;YACL,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;QAClB,KAAK,CAAC;YACL,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;QAClD,OAAO,CAAC,CAAC;YACR,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,UAAU,IAAI,IAAI,EAAE,CAAC;SACpD;KACD;AACF,CAAC,CAAC","sourcesContent":["export const list = (values: readonly string[], conjuction: \"or\" | \"and\") => {\n\tswitch (values.length) {\n\t\tcase 0:\n\t\t\treturn \"\";\n\t\tcase 1:\n\t\t\treturn values[0];\n\t\tcase 2:\n\t\t\treturn `${values[0]} ${conjuction} ${values[1]}`;\n\t\tdefault: {\n\t\t\tconst trail = values.slice(0, -1);\n\t\t\tconst head = values[values.length - 1];\n\t\t\treturn `${trail.join(\", \")}, ${conjuction} ${head}`;\n\t\t}\n\t}\n};\n"]}