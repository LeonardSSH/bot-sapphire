{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../src/lib/utils/constants.ts"],"names":[],"mappings":";;;;AAEA,gEAAgD;AAEhD,8DAA8B;AAEjB,QAAA,cAAc,GAAkB;IACzC,IAAI,EAAE;QACF,OAAO,EAAE;YACL,aAAa,EAAE;gBACX,gBAAgB,EAAE;oBACd,MAAM,oCAAmB;oBACzB,MAAM,sCAAmB;oBACzB,QAAQ,oCAAqB;iBAChC;gBACD,MAAM,EAAE,CAAC,KAAc,EAAE,MAAe,EAAE,GAAY,EAAE,EAAE;oBACtD,QAAQ,MAAyB,EAAE;wBAC/B,cAA4B,CAAC,CAAC;4BAC1B,OAAO,wBAAI,CAAC,KAAiB,EAAE,iBAAO,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;yBACpE;wBACD,aAA2B,CAAC,CAAC;4BACzB,OAAO,wBAAI,CAAC,KAAiB,EAAE,iBAAO,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;yBACnE;wBACD;4BACI,OAAO,KAAe,CAAC;qBAC9B;gBACL,CAAC;aACJ;SACJ;KACJ;CACJ,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport { Emojis, PenguFormatters } from \"@utils/Enums\";\nimport { list } from \"@utils/languageFunctions\";\nimport { ClientOptions } from \"discord.js\";\nimport i18next from \"i18next\";\n\nexport const CLIENT_OPTIONS: ClientOptions = {\n    i18n: {\n        i18next: {\n            interpolation: {\n                defaultVariables: {\n                    pCross: Emojis.PenguCross,\n                    pCheck: Emojis.PenguCheck,\n                    pLoading: Emojis.PenguLoading\n                },\n                format: (value: unknown, format?: string, lng?: string) => {\n                    switch (format as PenguFormatters) {\n                        case PenguFormatters.AndList: {\n                            return list(value as string[], i18next.t(\"global:and\", { lng }));\n                        }\n                        case PenguFormatters.OrList: {\n                            return list(value as string[], i18next.t(\"global:or\", { lng }));\n                        }\n                        default:\n                            return value as string;\n                    }\n                }\n            }\n        }\n    }\n};\n"]}