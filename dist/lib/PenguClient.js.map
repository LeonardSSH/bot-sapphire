{"version":3,"file":"PenguClient.js","sourceRoot":"","sources":["../../src/lib/PenguClient.ts"],"names":[],"mappings":";;;;AAEA,+DAA4D;AAC5D,yCAAsC;AACtC,mDAAqD;AACrD,mDAAmD;AACnD,gDAAyE;AAEzE,8DAAiD;AACjD,+BAA4B;AAC5B,uCAAqC;AAErC,+BAA6B;AAE7B,MAAa,WAAY,SAAQ,0BAAc;IAE3B,KAAK,GAAW,IAAI,iBAAK,EAAE,CAAC;IAC5B,KAAK,CAAe;IAEpC,YAAmB,OAAuB;QAEtC,KAAK,CAAC,wBAAY,CAAC,0BAAmB,EAAE,OAAO,CAAC,CAAC,CAAC;QAElD,IAAI,CAAC,KAAK,GAAG,IAAI,2BAAY,CAAC,IAAI,CAAC,CAAC;QAEpC,IAAI,CAAC,WAAW,GAAG,CAAC,OAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,eAAM,CAAC;QACzG,IAAI,CAAC,aAAa,GAAG,CAAC,OAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QAE9G,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,WAAI,CAAC,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAI,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,WAAI,CAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,WAAI,CAAC,SAAS,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;QAExE,oBAAS,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;CAEJ;AAtBD,kCAsBC","sourcesContent":["/* eslint-disable @typescript-eslint/unbound-method */\n/* eslint-disable @typescript-eslint/naming-convention */\nimport { CacheManager } from \"@lib/structures/CacheManager\";\nimport { PREFIX } from \"@root/config\";\nimport { SapphireClient } from \"@sapphire/framework\";\nimport { mergeDefault } from \"@sapphire/utilities\";\nimport { CLIENT_OPTIONS as CLIENT_OPTIONS_BASE } from \"@utils/constants\";\nimport { ClientOptions, Message } from \"discord.js\";\nimport Redis, { Redis as IRedis } from \"ioredis\";\nimport { join } from \"path\";\nimport { container } from \"tsyringe\";\n\nimport \"@scp/in17n/register\";\n\nexport class PenguClient extends SapphireClient {\n\n    public readonly redis: IRedis = new Redis();\n    public readonly cache: CacheManager;\n\n    public constructor(options?: ClientOptions) {\n        // @ts-expect-error Type instantiation is excessively deep and possibly infinite. ts(2589)\n        super(mergeDefault(CLIENT_OPTIONS_BASE, options));\n\n        this.cache = new CacheManager(this);\n\n        this.fetchPrefix = (message: Message) => message.guild ? this.cache.getPrefix(message.guild.id) : PREFIX;\n        this.fetchLanguage = (message: Message) => message.guild ? this.cache.getLanguage(message.guild.id) : \"en-US\";\n\n        this.arguments.registerPath(join(__dirname, \"..\", \"arguments\"));\n        this.commands.registerPath(join(__dirname, \"..\", \"commands\"));\n        this.events.registerPath(join(__dirname, \"..\", \"events\"));\n        this.preconditions.registerPath(join(__dirname, \"..\", \"preconditions\"));\n\n        container.registerInstance(PenguClient, this);\n    }\n\n}\n"]}