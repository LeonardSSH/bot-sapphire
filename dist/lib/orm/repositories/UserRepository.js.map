{"version":3,"file":"UserRepository.js","sourceRoot":"","sources":["../../../../src/lib/orm/repositories/UserRepository.ts"],"names":[],"mappings":";;;;AAAA,yDAAsD;AACtD,qCAAuE;AAGvE,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,oBAAsB;IAC/C,KAAK,CAAC,MAAM,CAAC,EAAU,EAAE,OAAoC;QACtE,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,QAAQ;YAAE,OAAO,QAAQ,CAAC;QAE9B,MAAM,IAAI,GAAG,IAAI,uBAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;IACb,CAAC;CACD,CAAA;AATY,cAAc;IAD1B,0BAAgB,CAAC,uBAAU,CAAC;GAChB,cAAc,CAS1B;AATY,wCAAc","sourcesContent":["import { UserEntity } from \"@orm/entities/UserEntity\";\nimport { EntityRepository, FindOneOptions, Repository } from \"typeorm\";\n\n@EntityRepository(UserEntity)\nexport class UserRepository extends Repository<UserEntity> {\n    public async ensure(id: string, options?: FindOneOptions<UserEntity>) {\n\t\tconst previous = await this.findOne(id, options);\n\t\tif (previous) return previous;\n\n\t\tconst data = new UserEntity();\n\t\tdata.id = id;\n\t\treturn data;\n\t}\n}\n"]}