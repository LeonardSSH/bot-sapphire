{"version":3,"file":"dbConfig.js","sourceRoot":"","sources":["../../../src/lib/orm/dbConfig.ts"],"names":[],"mappings":";;;AAAA,yCAAgJ;AAChJ,+BAA4B;AAC5B,qCAAyF;AACzF,yEAAgE;AAEnD,QAAA,MAAM,GAAsB;IACvC,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,4BAAmB;IACzB,IAAI,EAAE,4BAAmB;IACzB,QAAQ,EAAE,4BAAmB;IAC7B,QAAQ,EAAE,gCAAuB;IACjC,QAAQ,EAAE,4BAAmB;IAC7B,QAAQ,EAAE;QACR,WAAI,CAAC,SAAS,EAAE,eAAe,CAAC;KACjC;IACD,UAAU,EAAE;QACV,WAAI,CAAC,SAAS,EAAE,iBAAiB,CAAC;KACnC;IACD,GAAG,EAAE;QACH,WAAW,EAAE,sBAAsB;QACnC,aAAa,EAAE,wBAAwB;QACvC,cAAc,EAAE,yBAAyB;KAC1C;IACD,cAAc,EAAE,IAAI,+CAAmB,EAAE;IACzC,OAAO,EAAE,YAAG;CACb,CAAC;AAEW,QAAA,OAAO,GAAG,GAAwB,EAAE;IAC/C,IAAI;QACF,OAAO,OAAO,CAAC,OAAO,CAAC,uBAAa,EAAE,CAAC,CAAC;KACzC;IAAC,MAAM;QACN,OAAO,0BAAgB,CAAC,cAAM,CAAC,CAAC;KACjC;AACH,CAAC,CAAC","sourcesContent":["import { DEV, PGSQL_DATABASE_HOST, PGSQL_DATABASE_NAME, PGSQL_DATABASE_PASSWORD, PGSQL_DATABASE_PORT, PGSQL_DATABASE_USER } from \"@root/config\";\nimport { join } from \"path\";\nimport { Connection, ConnectionOptions, createConnection, getConnection } from \"typeorm\";\nimport { SnakeNamingStrategy } from \"typeorm-naming-strategies\";\n\nexport const config: ConnectionOptions = {\n  type: \"postgres\",\n  host: PGSQL_DATABASE_HOST,\n  port: PGSQL_DATABASE_PORT,\n  username: PGSQL_DATABASE_USER,\n  password: PGSQL_DATABASE_PASSWORD,\n  database: PGSQL_DATABASE_NAME,\n  entities: [\n    join(__dirname, \"entities/*.js\")\n  ],\n  migrations: [\n    join(__dirname, \"migrations/*.js\")\n  ],\n  cli: {\n    entitiesDir: \"src/lib/orm/entities\",\n    migrationsDir: \"src/lib/orm/migrations\",\n    subscribersDir: \"src/lib/orm/subscribers\"\n  },\n  namingStrategy: new SnakeNamingStrategy(),\n  logging: DEV\n};\n\nexport const connect = (): Promise<Connection> => {\n  try {\n    return Promise.resolve(getConnection());\n  } catch {\n    return createConnection(config);\n  }\n};\n"]}