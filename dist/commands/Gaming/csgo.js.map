{"version":3,"file":"csgo.js","sourceRoot":"","sources":["../../../src/commands/Gaming/csgo.ts"],"names":[],"mappings":";;;;AACA,mDAAoD;AACpD,2CAAyD;AACzD,sCAAoC;AACpC,yCAAwC;AACxC,iDAA8C;AAC9C,4DAA4B;AAE5B,MAAa,YAAa,SAAQ,mBAAO;IAE9B,KAAK,CAAC,GAAG,CAAC,OAAgB,EAAE,IAAU;QACzC,IAAI,QAAQ,GAA0B,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QAClF,IAAI,CAAC,QAAQ;YAAE,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ;YAAE,OAAO,OAAO,CAAC,cAAc,CAAC,4BAA4B,CAAC,CAAC;QAE3E,MAAM,GAAG,GAAyB,MAAM,YAAK,CAAC,uEAAuE,iBAAQ,CAAC,IAAI,cAAc,QAAQ,EAAE,CAAC,CAAC;QAC5J,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO;YAAE,OAAO,OAAO,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC;QAE7F,MAAM,IAAI,GAAoB,MAAM,YAAK,CAAC,+EAA+E,iBAAQ,CAAC,IAAI,YAAY,GAAG,CAAC,QAAQ,CAAC,OAAO,YAAY,CAAC,CAAC;QACpL,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,OAAO,CAAC,cAAc,CAAC,+BAA+B,CAAC,CAAC;QAI/F,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,yBAAY,EAAE;aACzC,SAAS,CAAC,cAAc,CAAC;aACzB,YAAY,EAAE;aACd,YAAY,CAAC,iCAAiC,CAAC;aAC/C,QAAQ,CAAC,SAAS,CAAC;aACnB,SAAS,CAAC,QAAQ,EAAE,iCAAiC,EAAE,sBAAsB,CAAC;aAC9E,QAAQ,CAAC,MAAM,OAAO,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,aAAa,CAAE,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,cAAc,CAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;aACtP,QAAQ,CAAC,MAAM,OAAO,CAAC,gBAAgB,CAAC,4BAA4B,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,aAAa,CAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;aACjO,QAAQ,CAAC,MAAM,OAAO,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,cAAc,CAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;aACpO,QAAQ,CAAC,MAAM,OAAO,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;aAC9N,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;aACzK,QAAQ,CAAC,MAAM,OAAO,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,mBAAmB,CAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;aAClP,QAAQ,CAAC,MAAM,OAAO,CAAC,gBAAgB,CAAC,mCAAmC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,qBAAqB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,qBAAqB,CAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;aACxP,QAAQ,CAAC,MAAM,OAAO,CAAC,gBAAgB,CAAC,qCAAqC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,kBAAkB,CAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;aACpP,QAAQ,CAAC,MAAM,OAAO,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,EAAE,GAAG,gBAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,mBAAmB,CAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,OAAO,EAAE,IAAI,MAAM,OAAO,CAAC,gBAAgB,CAAC,4BAA4B,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;IACxW,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,MAAY;QAClC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,aAAK,CAAC,OAAO,EAAE,CAAC;QACxC,MAAM,WAAW,GAAG,MAAM,KAAK,CAAC,YAAY,CAAkB,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEjF,OAAO,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC;IACtC,CAAC;CAEJ;AAvCD,oCAuCC","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Command, Args } from \"@sapphire/framework\";\nimport { Message, MessageEmbed, User } from \"discord.js\";\nimport { fetch } from \"@utils/util\";\nimport { API_KEYS } from \"@root/config\";\nimport { DbSet } from \"@lib/structures/DbSet\";\nimport moment from \"moment\";\n\nexport class PenguCommand extends Command {\n\n    public async run(message: Message, args: Args) {\n        let username: string|undefined|null = await args.pick(\"string\").catch(() => null);\n        if (!username) username = await this.fetchGametag(message.author);\n        if (!username) return message.sendTranslated(\"commands/gaming:noGamerTag\");\n\n        const res: CSGOPlayerSearchData = await fetch(`https://api.steampowered.com/ISteamUser/ResolveVanityURL/v0001/?key=${API_KEYS.CSGO}&vanityurl=${username}`);\n        if (!res || !res.response.success) return message.sendTranslated(\"commands/gaming:notFound\");\n\n        const data: CSGOPlayerStats = await fetch(`https://api.steampowered.com/ISteamUserStats/GetUserStatsForGame/v0002/?key=${API_KEYS.CSGO}&steamid=${res.response.steamid}&appid=730`);\n        if (!data || !data.playerstats) return message.sendTranslated(\"commands/gaming:statsNotFound\");\n\n        // @todo save flag to save account id\n\n        return message.channel.send(new MessageEmbed()\n            .setFooter(`PenguBot.com`)\n            .setTimestamp()\n            .setThumbnail(\"https://i.imgur.com/YsSDLu6.png\")\n            .setColor(\"#FB9E01\")\n            .setAuthor(username, \"https://i.imgur.com/ttIw76k.png\", \"https://pengubot.com\")\n            .addField(await message.fetchLanguageKey(\"commands/gaming:csgo.kdr\"), (data.playerstats ? data.playerstats.stats.find(a => a.name === \"total_kills\")!.value / data.playerstats.stats.find(a => a.name === \"total_deaths\")!.value : 0).toFixed(2), true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:csgo.kills\"), data.playerstats.stats.find(a => a.name === \"total_kills\") ? data.playerstats.stats.find(a => a.name === \"total_kills\")!.value.toLocaleString() : 0, true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:csgo.deaths\"), data.playerstats.stats.find(a => a.name === \"total_deaths\") ? data.playerstats.stats.find(a => a.name === \"total_deaths\")!.value.toLocaleString() : 0, true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:csgo.wins\"), data.playerstats.stats.find(a => a.name === \"total_wins\") ? data.playerstats.stats.find(a => a.name === \"total_wins\")!.value.toLocaleString() : 0, true)\n            .addField(`MVPs`, data.playerstats.stats.find(a => a.name === \"total_mvps\") ? data.playerstats.stats.find(a => a.name === \"total_mvps\")!.value.toLocaleString() : 0, true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:csgo.knifeKills\"), data.playerstats.stats.find(a => a.name === \"total_kills_knife\") ? data.playerstats.stats.find(a => a.name === \"total_kills_knife\")!.value.toLocaleString() : 0, true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:csgo.bombsPlanted\"), data.playerstats.stats.find(a => a.name === \"total_planted_bombs\") ? data.playerstats.stats.find(a => a.name === \"total_planted_bombs\")!.value.toLocaleString() : 0, true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:csgo.lastMatchKills\"), data.playerstats.stats.find(a => a.name === \"last_match_kills\") ? data.playerstats.stats.find(a => a.name === \"last_match_kills\")!.value.toLocaleString() : 0, true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:csgo.timePlayed\"), `${moment.duration(data.playerstats.stats.find(a => a.name === \"total_time_played\") ? data.playerstats.stats.find(a => a.name === \"total_time_played\")!.value.toLocaleString() : 0, \"seconds\").asHours()} ${await message.fetchLanguageKey(\"commands/gaming:csgo.hours\")}`, true));\n    }\n\n    public async fetchGametag(author: User) {\n        const { users } = await DbSet.connect();\n        const gametagData = await users.fetchGametag<CSGOGametagData>(this.name, author);\n\n        return gametagData.data?.username;\n    }\n\n}\n\ninterface CSGOGametagData {\n    username?: string;\n}\n\ninterface CSGOPlayerSearchData {\n    response: {\n        success: 1|0;\n        steamid: number;\n    }\n}\n\ninterface CSGOPlayerStats {\n    playerstats: {\n        steamID: string;\n        gameName: string;\n        stats: [\n            {\n                name: string;\n                value: number;\n            }\n        ],\n        achievements: [\n            {\n                name: string;\n                achieved: 1|0;\n            }\n        ]\n    }\n}\n"]}