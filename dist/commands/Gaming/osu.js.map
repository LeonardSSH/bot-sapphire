{"version":3,"file":"osu.js","sourceRoot":"","sources":["../../../src/commands/Gaming/osu.ts"],"names":[],"mappings":"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","sourcesContent":["import { Command, Args, CommandOptions } from \"@sapphire/framework\";\nimport { Message, MessageEmbed, User } from \"discord.js\";\nimport { fetch } from \"@utils/util\";\nimport { API_KEYS } from \"@root/config\";\nimport moment from \"moment\";\nimport { DbSet } from \"@lib/structures/DbSet\";\nimport { ApplyOptions } from \"@sapphire/decorators\";\nimport { PreConditions } from \"@lib/types/Types\";\n\n@ApplyOptions<CommandOptions>({\n    description: \"commands/gaming:osu.description\",\n    detailedDescription: \"commands/gaming:osu.detailedDescription\",\n    aliases: [\"osustats\"],\n    preconditions: [PreConditions.Permissions]\n})\nexport class PenguCommand extends Command {\n\n    public async run(message: Message, args: Args) {\n        let username: string|undefined|null = await args.pick(\"string\").catch(() => null);\n        if (!username) username = await this.fetchGametag(message.author);\n        if (!username) return message.sendTranslated(\"commands/gaming:noGamerTag\");\n\n        const res: OSUResponseData[] = await fetch(`https://osu.ppy.sh/api/get_user?k=${API_KEYS.OSU}&u=${encodeURIComponent(username as string)}`);\n        if (!res || !res[0]) return message.sendTranslated(\"commands/gaming:notFound\");\n\n        // @todo save flag to save username\n\n        const data = res[0];\n        return message.channel.send(new MessageEmbed()\n            .setFooter(`PenguBot.com - ${await message.fetchLanguageKey(\"poweredBy\")} osu.ppy.sh`)\n            .setTimestamp()\n            .setThumbnail(`https://a.ppy.sh/${data.user_id}`)\n            .setColor(\"#EF5E9F\")\n            .setAuthor(data.username, \"https://i.imgur.com/IVtH5vo.png\", \"https://pengubot.com\")\n            .addField(await message.fetchLanguageKey(\"commands/gaming:osu.totalScore\"), Number(data.total_score).toLocaleString(), true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:osu.rankedScore\"), Number(data.ranked_score).toLocaleString(), true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:osu.level\"), Number(data.level).toFixed(0).toLocaleString(), true)\n            .addField(`${await message.fetchLanguageKey(\"commands/gaming:osu.count\")} 50`, Number(data.count50).toLocaleString(), true)\n            .addField(`${await message.fetchLanguageKey(\"commands/gaming:osu.count\")} 100`, Number(data.count100).toLocaleString(), true)\n            .addField(`${await message.fetchLanguageKey(\"commands/gaming:osu.count\")} 300`, Number(data.count300).toLocaleString(), true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:osu.globalRank\"), Number(data.pp_rank).toLocaleString(), true)\n            .addField(`SS ${await message.fetchLanguageKey(\"commands/gaming:osu.rank\")}`, Number(data.count_rank_ss).toLocaleString(), true)\n            .addField(`SSH ${await message.fetchLanguageKey(\"commands/gaming:osu.rank\")}`, Number(data.count_rank_ssh).toLocaleString(), true)\n            .addField(`S ${await message.fetchLanguageKey(\"commands/gaming:osu.rank\")}`, Number(data.count_rank_s).toLocaleString(), true)\n            .addField(`A ${await message.fetchLanguageKey(\"commands/gaming:osu.rank\")}`, Number(data.count_rank_a).toLocaleString(), true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:osu.accuracy\"), `${Number(data.accuracy).toFixed(2)}%`, true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:osu.timePlayed\"), `${moment.duration(Number(data.total_seconds_played), \"seconds\").asHours().toLocaleString()} ${await message.fetchLanguageKey(\"commands/gaming:osu.hours\")}`, true));\n    }\n\n    public async fetchGametag(author: User) {\n        const { users } = await DbSet.connect();\n        const gametagData = await users.fetchGametag<OSUGametagData>(this.name, author);\n\n        return gametagData.data?.username;\n    }\n\n}\n\ninterface OSUResponseData {\n    user_id: string;\n    username: string;\n    join_date: string;\n    count300: string;\n    count100: string;\n    count50: string;\n    playcount: string;\n    ranked_score: string;\n    total_score: string;\n    pp_rank: string;\n    level: string;\n    pp_raw: string;\n    accuracy: string;\n    count_rank_ss: string;\n    count_rank_ssh: string;\n    count_rank_s: string;\n    count_rank_sh: string;\n    count_rank_a: string;\n    country: string;\n    total_seconds_played: string;\n    pp_country_rank: string;\n    events: OSUEvent[];\n}\n\ninterface OSUEvent {\n    display_html: string;\n    beatmap_id: string;\n    beatmapset_id: string;\n    data: string;\n    epicfactor: string;\n}\n\ninterface OSUGametagData {\n    username?: string;\n}\n"]}