{"version":3,"file":"fortnite.js","sourceRoot":"","sources":["../../../src/commands/Gaming/fortnite.ts"],"names":[],"mappings":"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","sourcesContent":["import { Command, Args, CommandOptions } from \"@sapphire/framework\";\nimport { Message, MessageEmbed, User } from \"discord.js\";\nimport { fetch } from \"@utils/util\";\nimport { API_KEYS } from \"@root/config\";\nimport { DbSet } from \"@lib/structures/DbSet\";\nimport moment from \"moment\";\nimport { ApplyOptions } from \"@sapphire/decorators\";\nimport { PreConditions } from \"@lib/types/Types\";\n\n@ApplyOptions<CommandOptions>({\n    description: \"commands/gaming:fortnite.description\",\n    detailedDescription: \"commands/gaming:fortnite.detailedDescription\",\n    preconditions: [PreConditions.Permissions]\n})\nexport class PenguCommand extends Command {\n\n    public async run(message: Message, args: Args) {\n        let username: string|undefined|null = await args.pick(\"string\").catch(() => null);\n        if (!username) username = await this.fetchGametag(message.author);\n        if (!username) return message.sendTranslated(\"commands/gaming:noGamerTag\");\n\n        const res: FortnitePlayerSearchData = await fetch(`https://fortniteapi.io/v1/lookup?username=${username}`, { headers: { Authorization: API_KEYS.FORTNITE } });\n        if (!res.result) return message.sendTranslated(\"commands/gaming:notFound\");\n\n        const stats: FortnitePlayerStats = await fetch(`https://fortniteapi.io/v1/stats?account=${res.account_id}`, { headers: { Authorization: API_KEYS.FORTNITE } });\n        if (!stats.result || !stats.global_stats) return message.sendTranslated(\"commands/gaming:statsNotFound\");\n\n        // @todo save flag to save account id\n\n        return message.channel.send(new MessageEmbed()\n            .setFooter(`PenguBot.com`)\n            .setTimestamp()\n            .setThumbnail(\"https://i.imgur.com/FD0xslx.png\")\n            .setColor(\"#63CBF0\")\n            .setAuthor(stats.name, \"https://i.imgur.com/FD0xslx.png\", \"https://pengubot.com\")\n            .addField(await message.fetchLanguageKey(\"commands/gaming:fortnite.winRate\"), ((stats.global_stats.duo.winrate + stats.global_stats.solo.winrate + stats.global_stats.squad.winrate) / 3).toPrecision(2), true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:fortnite.level\"), stats.account.level, true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:fortnite.progress\"), `${stats.account.progress_pct}%`, true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:fortnite.kills\"), (stats.global_stats.duo.kills + stats.global_stats.solo.kills + stats.global_stats.squad.kills).toLocaleString(), true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:fortnite.kdr\"), ((stats.global_stats.duo.kd + stats.global_stats.solo.kd + stats.global_stats.squad.kd) / 3).toPrecision(2), true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:fortnite.matchesPlayed\"), (stats.global_stats.duo.matchesplayed + stats.global_stats.solo.matchesplayed + stats.global_stats.squad.matchesplayed).toLocaleString(), true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:fortnite.timePlayed\"), `${moment.duration((stats.global_stats.duo.minutesplayed + stats.global_stats.solo.minutesplayed + stats.global_stats.squad.minutesplayed), \"minutes\").asHours().toLocaleString()} ${await message.fetchLanguageKey(\"commands/gaming:fortnite.hours\")}`, true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:fortnite.wins\"), (stats.global_stats.duo.placetop1 + stats.global_stats.solo.placetop1 + stats.global_stats.squad.placetop1).toLocaleString(), true)\n            .addField(await message.fetchLanguageKey(\"commands/gaming:fortnite.score\"), (stats.global_stats.duo.score + stats.global_stats.solo.score + stats.global_stats.squad.score).toLocaleString(), true));\n    }\n\n    public async fetchGametag(author: User) {\n        const { users } = await DbSet.connect();\n        const gametagData = await users.fetchGametag<FortniteGametagData>(this.name, author);\n\n        return gametagData.data?.username;\n    }\n\n}\n\ninterface FortniteGametagData {\n    username?: string;\n}\n\ninterface FortnitePlayerSearchData {\n    result: boolean;\n    account_id: string;\n}\n\ninterface FortnitePlayerStats {\n    result: boolean;\n    source: string;\n    mode: string;\n    name: string;\n    account: {\n        level?: number;\n        progress_pct?: number;\n    };\n    global_stats?: {\n        solo: {\n            placetop1: number;\n            kd: number;\n            winrate: number;\n            placetop3: number;\n            placetop5: number;\n            placetop6: number;\n            placetop10: number;\n            placetop12: number;\n            placetop25: number;\n            kills: number;\n            matchesplayed: number;\n            minutesplayed: number;\n            score: number;\n            playersoutlived: number;\n        };\n        duo: {\n            placetop1: number;\n            kd: number;\n            winrate: number;\n            placetop3: number;\n            placetop5: number;\n            placetop6: number;\n            placetop10: number;\n            placetop12: number;\n            placetop25: number;\n            kills: number;\n            matchesplayed: number;\n            minutesplayed: number;\n            score: number;\n            playersoutlived: number;\n        };\n        squad: {\n            placetop1: number;\n            kd: number;\n            winrate: number;\n            placetop3: number;\n            placetop5: number;\n            placetop6: number;\n            placetop10: number;\n            placetop12: number;\n            placetop25: number;\n            kills: number;\n            matchesplayed: number;\n            minutesplayed: number;\n            score: number;\n            playersoutlived: number;\n        };\n    }\n}\n"]}