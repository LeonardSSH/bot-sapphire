{"version":3,"file":"User.js","sourceRoot":"","sources":["../../src/arguments/User.ts"],"names":[],"mappings":";;;AACA,mDAA4F;AAI5F,MAAa,aAAc,SAAQ,oBAAQ;IAChC,WAAW,GAAG,0BAA0B,CAAC;IAEnD,YAAmB,OAAqB;QACvC,KAAK,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IAClC,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,QAAgB,EAAE,OAAwB;QACpD,IAAI,CAAC,QAAQ;YAAE,OAAO,eAAG,CAAC,IAAI,qBAAS,CAAC,cAAc,EAAE,MAAM,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC;QAE/H,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEjF,IAAI,CAAC,IAAI;YAAE,OAAO,eAAG,CAAC,IAAI,qBAAS,CAAC,cAAc,EAAE,MAAM,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAC9H,OAAO,cAAE,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;CACD;AAhBD,sCAgBC","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Argument, ArgumentContext, err, ok, Result, UserError } from \"@sapphire/framework\";\nimport type { PieceContext } from \"@sapphire/pieces\";\nimport type { User } from \"discord.js\";\n\nexport class PenguArgument extends Argument {\n    public userIDRegex = /^(?:<@!?)?(\\d{17,19})>?$/;\n\n\tpublic constructor(context: PieceContext) {\n\t\tsuper(context, { name: \"user\" });\n\t}\n\n\tpublic async run(argument: string, context: ArgumentContext): Promise<Result<User, UserError>> {\n        if (!argument) return err(new UserError(\"UserArgument\", await context.message.fetchLanguageKey(\"arguments/user:notProvided\")));\n\n        const id = this.userIDRegex.exec(argument);\n        const user = id ? await this.client.users.fetch(id![1]).catch(() => null) : null;\n\n        if (!user) return err(new UserError(\"UserArgument\", await context.message.fetchLanguageKey(\"arguments/user:notFound\")));\n\t\treturn ok(user);\n\t}\n}\n"]}