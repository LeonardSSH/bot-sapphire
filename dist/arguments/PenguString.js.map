{"version":3,"file":"PenguString.js","sourceRoot":"","sources":["../../src/arguments/PenguString.ts"],"names":[],"mappings":";;;AAAA,mDAA4F;AAG5F,MAAa,aAAc,SAAQ,oBAAQ;IAC1C,YAAmB,OAAqB;QACvC,KAAK,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;IACpC,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,QAAgB,EAAE,OAAwB;QAC1D,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,EAAE;YAC7E,OAAO,eAAG,CAAC,IAAI,qBAAS,CAAC,wBAAwB,EAAE,MAAM,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,yCAAyC,CAAC,CAAC,CAAC,CAAC;SACvI;QACD,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,EAAE;YAC7E,OAAO,eAAG,CAAC,IAAI,qBAAS,CAAC,uBAAuB,EAAE,MAAM,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,wCAAwC,CAAC,CAAC,CAAC,CAAC;SACrI;QAED,OAAO,cAAE,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC;CACD;AAfD,sCAeC","sourcesContent":["import { Argument, ArgumentContext, err, ok, Result, UserError } from \"@sapphire/framework\";\nimport type { PieceContext } from \"@sapphire/pieces\";\n\nexport class PenguArgument extends Argument {\n\tpublic constructor(context: PieceContext) {\n\t\tsuper(context, { name: \"string\" });\n\t}\n\n\tpublic async run(argument: string, context: ArgumentContext): Promise<Result<string, UserError>> {\n\t\tif (typeof context.minimum === \"number\" && argument.length < context.minimum) {\n\t\t\treturn err(new UserError(\"ArgumentStringTooShort\", await context.message.fetchLanguageKey(\"arguments/string:argumentStringTooShort\")));\n\t\t}\n\t\tif (typeof context.maximum === \"number\" && argument.length > context.maximum) {\n\t\t\treturn err(new UserError(\"ArgumentStringTooLong\", await context.message.fetchLanguageKey(\"arguments/string:argumentStringTooLong\")));\n\t\t}\n\n\t\treturn ok(argument);\n\t}\n}\n"]}